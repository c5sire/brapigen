#' @title
#' brapi_{{verb}}_{{name}}
#'
#' @description
#' {{summary}}
#'
#' @param con list; required: TRUE; BrAPI connection object
{{#parameters}}
#' @param {{pname}}
{{/parameters}}
#'
#' @details {{description}}
#'
#' @return data.frame
#'
#' @author brapir generator package
#'
#' @references \href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI/{{version}}#/{{tag}}/{{verb}}_{{name}} }{SwaggerHub}
#'
{{#family}}
#' @family {{fname}}
{{/family}}
#'
#' @example
#'
#' @export
brapi_{{verb}}_{{name}} <- function(con = NULL, {{arguments}}) {
brapi_checkCon(con = con, verbose = FALSE)
brapi_checkReqArgs({{required}})
usedArgs <- as.list(match.call())
usedArgs <- lapply(X = usedArgs, FUN = eval, envir = parent.frame(n = 1))
usedArgs[[1]] <- NULL
## check other arguments for validity
#brapi_checkArgs(reqArgs = "{{required}}", usedArgs)
## get callurl (finished!)
callurl <- brapi_GET_callURL(usedArgs = usedArgs,
                             callPath = "{{call}}",
                             reqArgs = "{{required}}",
                             packageName = "{{package}}",
                             callVersion = {{version}})
## get respones
## convert response to table
## show metadata
## return result table
out <- list()
out[["callurl"]] <- callurl
out[["usedArgs"]] <- usedArgs
class(out) <- "brapi_{{verb}}_{{name}}"
return(out)
}
